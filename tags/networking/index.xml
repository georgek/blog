<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>networking on gpk blog</title><link>https://georgek.github.io/blog/tags/networking/</link><description>Recent content in networking on gpk blog</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Mon, 02 Oct 2023 21:07:29 +0100</lastBuildDate><atom:link href="https://georgek.github.io/blog/tags/networking/index.xml" rel="self" type="application/rss+xml"/><item><title>Working on Multiple Web Projects with Docker Compose and Traefik</title><link>https://georgek.github.io/blog/posts/multiple-web-projects-traefik/</link><pubDate>Mon, 02 Oct 2023 21:07:29 +0100</pubDate><guid>https://georgek.github.io/blog/posts/multiple-web-projects-traefik/</guid><description>Docker Compose is a brilliant tool for bringing up local development environments for web projects. But working with multiple projects can be a pain due to clashes. For example, all projects want to listen to port 80 (or perhaps one of the super common higher ones like 8000 etc.). This forces developers to only bring one project up at a time, or hack the compose files to change the port numbers.</description></item><item><title>Resolving Private IP Addresses with pfSense DNS Resolver</title><link>https://georgek.github.io/blog/posts/pfsense-unbound-private/</link><pubDate>Sun, 01 Oct 2023 23:26:11 +0100</pubDate><guid>https://georgek.github.io/blog/posts/pfsense-unbound-private/</guid><description>I use the Unbound DNS resolver built in to pfSense. By default the resolver filters out any results that are private IP addresses. Normally this makes sense: no public domain should have a private address. But sometimes it does make sense. For example there are some useful services like sslip.io that will resolve to any IP address that you like. So 127.0.0.1.sslip.io resolves to to 127.0.0.1. This is can be useful for local development, especially when working with containers and reverse proxies and the like.</description></item></channel></rss>