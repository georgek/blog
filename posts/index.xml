<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>https://georgek.github.io/blog/posts/</link><description>Recent content in Posts on</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><lastBuildDate>Thu, 16 Nov 2023 20:14:00 +0000</lastBuildDate><atom:link href="https://georgek.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Lament for the Firefox Quick Find Key</title><link>https://georgek.github.io/blog/posts/lamenting-firefox-quick-find/</link><pubDate>Thu, 16 Nov 2023 20:14:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/lamenting-firefox-quick-find/</guid><description>For as long as I&amp;rsquo;ve been a Firefox user&amp;mdash;almost 20 years at this point&amp;mdash;it has featured a &amp;ldquo;quick find&amp;rdquo; bound to the venerable / (forward slash) key.
Following a pattern established by other software like less, man, and vi the slash key was simple: it finds stuff in the current page.
Common patterns like this are great. It&amp;rsquo;s why everyone has agreed on what Ctrl-C and Ctrl-V (or very similar) should do across all operating systems.</description></item><item><title>Using Nerd Icons in Org Agenda</title><link>https://georgek.github.io/blog/posts/org-agenda-nerd-icons/</link><pubDate>Tue, 14 Nov 2023 23:56:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/org-agenda-nerd-icons/</guid><description>Org mode supports icons in its agenda views. The icons can be given as either file paths to images (like SVGs), as image data or as a display property. I use a Nerd Font along with the nerd-icons package in my Emacs config, so I thought I might as well enable icons in my org agenda views.
The nice thing about using nerd fonts is this works perfectly in text mode too (assuming you have a nerd font configured for your terminal emulator).</description></item><item><title>Custom Static Vector Maps on your Hugo Static Site</title><link>https://georgek.github.io/blog/posts/hugo-static-site-maps/</link><pubDate>Fri, 27 Oct 2023 00:11:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/hugo-static-site-maps/</guid><description>This blog is a static site built with Hugo. Being static means it can be served from a basic, standard (you might say stupid) web server with no server-side scripting at all. In fact, this blog is currently hosted on Github Pages, but it could be anywhere.
Up until now, if you wanted to include an interactive map on a static site you were limited to using an external service like Google Maps or Mapbox and embedding their JS into your page.</description></item><item><title>Working on Multiple Web Projects with Docker Compose and Traefik</title><link>https://georgek.github.io/blog/posts/multiple-web-projects-traefik/</link><pubDate>Mon, 02 Oct 2023 09:00:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/multiple-web-projects-traefik/</guid><description>Docker Compose is a brilliant tool for bringing up local development environments for web projects. But working with multiple projects can be a pain due to clashes. For example, all projects want to listen to port 80 (or perhaps one of the super common higher ones like 8000 etc.). This forces developers to only bring one project up at a time, or hack the compose files to change the port numbers.</description></item><item><title>Resolving Private IP Addresses with pfSense DNS Resolver</title><link>https://georgek.github.io/blog/posts/pfsense-unbound-private/</link><pubDate>Sun, 01 Oct 2023 23:10:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/pfsense-unbound-private/</guid><description>I use the Unbound DNS resolver built in to pfSense. By default the resolver filters out any results that are private IP addresses. Normally this makes sense: no public domain should have a private address. But sometimes it does make sense. For example there are some useful services like sslip.io that will resolve to any IP address that you like. So 127.0.0.1.sslip.io resolves to to 127.0.0.1. This is can be useful for local development, especially when working with containers and reverse proxies and the like.</description></item><item><title>Why is Emacs Hanging?</title><link>https://georgek.github.io/blog/posts/emacs-hangs-debug/</link><pubDate>Thu, 21 Sep 2023 14:10:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/emacs-hangs-debug/</guid><description>Even after using Emacs for 15 years there&amp;rsquo;s still so much I can learn. I probably should have already known this, but there&amp;rsquo;s a first time for everything.
It&amp;rsquo;s rare that Emacs hangs. Exceedingly rare. Which is probably why I didn&amp;rsquo;t know how to deal with it. Today Emacs started hanging when trying to open files over a remote TRAMP session (SSH).
The most important key of all that everyone who uses Emacs knows is C-g.</description></item><item><title>Replacing Strings in an Entire Project</title><link>https://georgek.github.io/blog/posts/emacs-regexp-replace/</link><pubDate>Tue, 22 Aug 2023 14:22:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/emacs-regexp-replace/</guid><description>This is a little trick I just applied and thought was cool enough to write down.
Let&amp;rsquo;s say you want to replace a name that is used throughout a project. Due to various conventions/restrictions in use the name might appear in several forms like: MY_COOL_NAME, my-cool-name, my_cool_name etc.
In Emacs you can invoke regexp replace across an entire project by invoking project-query-replace-regexp, by default bound to C-x p r. This will first prompt for the regexp to search for, then what to replace it with.</description></item><item><title>My 2023 Emacs Python Setup</title><link>https://georgek.github.io/blog/posts/emacs-python-2023/</link><pubDate>Tue, 15 Aug 2023 14:19:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/emacs-python-2023/</guid><description>I&amp;rsquo;ve been using Emacs for almost 15 years now. Somewhat surprisingly, I hadn&amp;rsquo;t touched my config in three years! It&amp;rsquo;s been working that well. But now that Emacs 29 has been released I&amp;rsquo;ve decided to take a look at what&amp;rsquo;s new and there have been some big changes, particularly for Python.
Goodbye Elpy, Goodbye Projectile Elpy has been the primary mode for Python development for me for years now. But sadly, it looks like the project is no more.</description></item><item><title>Install Calibre without Root</title><link>https://georgek.github.io/blog/posts/calibre-rootless-install/</link><pubDate>Sun, 13 Aug 2023 13:23:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/calibre-rootless-install/</guid><description>On Linux, software should generally be installed with your system package manager (apt, yum, portage etc.) However, Calibre is a bit &amp;ldquo;special&amp;rdquo; in this respect. While well-loved, it&amp;rsquo;s known to be a bit difficult to package (to say the least) and most distro packages you&amp;rsquo;ll find are out of date. The official website recommends against using any distro packages and instead installing it directly from the site.
Unfortunately, the official instructions are problematic for a number of reasons.</description></item><item><title>Cooking with Make</title><link>https://georgek.github.io/blog/posts/cooking-with-make/</link><pubDate>Thu, 03 Aug 2023 00:00:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/cooking-with-make/</guid><description>In which I compare cooking food with building software</description></item><item><title>Arduino Programming with Emacs</title><link>https://georgek.github.io/blog/posts/emacs-arduino/</link><pubDate>Mon, 31 Jul 2023 19:30:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/emacs-arduino/</guid><description>If you want to start Arduino programming you&amp;rsquo;ll notice a lot of the documentation and tutorials are centred around the Arduino IDE. Now, obviously, as an Emacs user you&amp;rsquo;ll be loath to install something like Arduino IDE, let alone actually use it. The good news is it&amp;rsquo;s super easy to get started with Arduino with any editor, including Emacs and even Vim if you so desire.
All the Arduino IDE is doing is calling a cross-compiler toolchain then using avrdude to communicate with the Arduino to upload software.</description></item><item><title>Building a Home Cinema on a Shoestring</title><link>https://georgek.github.io/blog/posts/shoestring-home-cinema/</link><pubDate>Mon, 24 Jul 2023 14:25:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/shoestring-home-cinema/</guid><description>I love going to the cinema, but I&amp;rsquo;ve always been disappointed that I can&amp;rsquo;t see older films and I can&amp;rsquo;t see them when it&amp;rsquo;s convenient for me. There have always been ways to watch films at home, but even today when large screens and high-definition formats are ubiquitous, it&amp;rsquo;s just not the same as the cinema experience. There&amp;rsquo;s something completely different about the big screen that a TV in a living room can&amp;rsquo;t replicate.</description></item><item><title>Writing a Blog with Org-mode</title><link>https://georgek.github.io/blog/posts/hugo-org-mode/</link><pubDate>Sat, 15 Jul 2023 13:43:00 +0000</pubDate><guid>https://georgek.github.io/blog/posts/hugo-org-mode/</guid><description>I&amp;rsquo;ve always thought I should write a blog, but I just never got around to setting it up. I know there are services you can simply sign up to and start writing, but that isn&amp;rsquo;t for me. I have two requirements for this thing:
I can write using tools of my choice, I can host it anywhere. My tool of choice for writing anything is emacs and, for natural language in particular, org-mode.</description></item></channel></rss>